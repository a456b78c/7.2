#include <iostream>
#include <iomanip>
#include <time.h>

using namespace std;

void CreateRow(int** a, const int rowNo, const int N, const int Low,
	const int High, int colNo)
{
	a[rowNo][colNo] = Low + rand() % (High - Low + 1);
	if (colNo < N - 1)
		CreateRow(a, rowNo, N, Low, High, colNo + 1);
}
void CreateRows(int** a, const int N, const int Low, const int High, int rowNo)
{
	CreateRow(a, rowNo, N, Low, High, 0);
	if (rowNo < N - 1)
		CreateRows(a, N, Low, High, rowNo + 1);
}
void PrintRow(int** a, const int rowNo, const int N, int colNo)
{
	cout << setw(4) << a[rowNo][colNo];
	if (colNo < N - 1)
		PrintRow(a, rowNo, N, colNo + 1);
	else
		cout << endl;
}
void PrintRows(int** a, const int N, int rowNo)
{
	PrintRow(a, rowNo, N, 0);
	if (rowNo < N - 1)
		PrintRows(a, N, rowNo + 1);
	else
		cout << endl;
}
int Min(int** a, const int k, const int N, int ni, int ki, int min)

{
	
	if (ki < k)
	{
		if (min > a[ni][ki])
		{
			min = a[ni][ki];
		}
		Min(a, k, N, ni, ki + 1, min);
	}
	else return min;
}
int SumMin(int** a, const int N, const int k, int ni, int ki, int S)
{
	//int Low = -10;
	int min = 0;
	if (ni < N)
	{
		min = Min(a, k, N, ni, 0, min);
		S += min;
		SumMin(a, N, k, ni + 1, ki, S);
	}
	else return S;
}
int main()
{
	srand((unsigned)time(NULL));
	int N;
	cout << "N = "; cin >> N;
	int k;
	cout << "k = "; cin >> k;
	cout << endl;
	int** a = new int* [N];
	for (int i = 0; i < N; i++)
		a[i] = new int[k];
	int Low = -10, High = 10;
	CreateRows(a, N, Low, High, 0);
	PrintRows(a, N, 0);
	
	for (int i = 0; i < N; i++)
		delete[] a[i];
	delete[] a;
	return 0;
}